function on_game_start()
	RegisterScriptCallback("npc_on_hit_callback", npc_on_hit_callback)
	RegisterScriptCallback("monster_on_hit_callback", npc_on_hit_callback)
	igi_callbacks.add_callback("on_entity_init", on_entity_init)
	igi_callbacks.add_callback("on_entity_del", on_entity_del)

	printf("WTF: Arszi Realistic Assassinations loaded.")
end

killed_by_player = {}

igi_target_kill.Kill.ara_able = true
igi_target_assault.Assault.ara_able = true

function npc_on_hit_callback(npc,amount,local_direction,who,bone_index)
	if (not npc or not who) then return end
	if (not npc.id or not who.id) then return end

	if who:id() == 0 or se_load_var(who:id(), who:name(), "companion") then
		killed_by_player[npc:id()] = true
	end
end

function on_entity_init(CACHE, entity)
	if not igi_mcm.get_options_value("realistic_assassinations") then return end
	local is_ara = igi_taskdata.get_controller(entity, CACHE).ara_able
	if not is_ara then return end


	entity.ara_key = math.random()
	CACHE[entity.ara_key] = {
		{
			CONTROLLER = "@$ igi_ara.Ara",
			link_id = entity.ara_key,
			squads = entity.squads or {entity.id},
		}
	}
	igi_generic_task.add_entities(CACHE.task_id, entity.ara_key)
end

function on_entity_del(CACHE, entity)
	if entity.ara_key then
		igi_generic_task.remove_entities(CACHE.task_id, entity.ara_key)
	end
end

Ara = {}

function Ara.on_init(entity)
	igi_helper.trace_assert(type(entity.squads) == "table", "ARA: entity.squads is not a table", entity)
	for _, squad_id in pairs(entity.squads) do
		local se_squad = alife_object(squad_id)
		igi_helper.trace_assert(se_squad and se_squad.squad_members, "ARA: id is not a squad", squad_id)

		entity.ara_to_kill = {}
		for member in se_squad:squad_members() do
			entity.ara_to_kill[member.id] = true
		end
	end
end

local function all_squads_dead(entity)
	for _, id in pairs(entity.squads) do
		if alife_object(id) then
			return false
		end
	end
	return true
end

function Ara.status(entity)
	if entity._status then return entity._status end
	for id in pairs(entity.ara_to_kill) do
		if killed_by_player[id] then
			entity._status = igi_subtask.TASK_STATUSES.COMPLETED
			return igi_subtask.TASK_STATUSES.COMPLETED
		end
	end

	if all_squads_dead(entity) then
		entity._status = igi_subtask.TASK_STATUSES.FAILED
		return igi_subtask.TASK_STATUSES.FAILED
	end

	return igi_subtask.TASK_STATUSES.RUNNING
end
