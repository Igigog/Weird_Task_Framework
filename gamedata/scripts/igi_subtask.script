TASK_STATUSES = {
	RUNNING = nil,	-- no value means running
	COMPLETED = "COMPLETED",
	FAILED = "FAILED",
	READY_TO_FINISH = "READY_TO_FINISH",
}

function finish_all_subtasks(CACHE)
	if CACHE.status ~= TASK_STATUSES.FAILED then
		CACHE.status = TASK_STATUSES.COMPLETED
	end

	for _, entity in pairs(CACHE.entities) do
		if entity.status == TASK_STATUSES.READY_TO_FINISH then
			entity.status = CACHE.status
		end
	end
end

function update_current_map_target(CACHE)
	if CACHE.status == TASK_STATUSES.COMPLETED
		or CACHE.status == TASK_STATUSES.READY_TO_FINISH then
		CACHE.current_target_id = CACHE.task_giver_id
	else
		CACHE.current_target_id = get_quest_target(CACHE.entities)
	end
end

function process_subtasks(CACHE)
	local updated = false
	for _, entity in pairs(CACHE.entities) do
		if entity.status == TASK_STATUSES.RUNNING
				or entity.status == TASK_STATUSES.READY_TO_FINISH then
			if update_entity_status(entity) then
				igi_callbacks.invoke_callbacks("on_subtask_status_change", CACHE, entity)
				updated = true
			end
		end
	end

	if updated then
		CACHE.status = get_task_status(CACHE.entities)
	end

	return updated
end

function get_quest_target(entities)
	for _, entity in pairs(entities) do
		local controller = igi_taskdata.get_controller(entity)
		if controller.status and controller.quest_target
			and entity.status == TASK_STATUSES.RUNNING then

			return controller.quest_target(entity)
		end
	end
end

function get_task_status(entities)
	local ready_to_finish = false
	local running = false
	for _, entity in pairs(entities) do
		local controller = igi_taskdata.get_controller(entity)
		if controller.status then
			if entity.status == TASK_STATUSES.FAILED and not entity.optional then
				return TASK_STATUSES.FAILED
			end
	
			if entity.status == TASK_STATUSES.RUNNING then
				running = true
			elseif entity.status == TASK_STATUSES.READY_TO_FINISH then
				ready_to_finish = true
			end
		end
	end

	if running then return TASK_STATUSES.RUNNING
	elseif ready_to_finish then return TASK_STATUSES.READY_TO_FINISH
	else return TASK_STATUSES.COMPLETED end
end

function update_entity_status(entity)
	local controller = igi_taskdata.get_controller(entity)
	if not controller.status then return false end
	local new_status = controller.status(entity)
	if new_status == entity.status then return false end
	entity.status = new_status
	return true
end
