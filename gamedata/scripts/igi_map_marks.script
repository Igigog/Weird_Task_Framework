update_mark = function (entity)
	if not entity.mark then return end
	local has_spot = level.map_has_object_spot(entity.id, entity.mark) == 1
	local object_in_world = igi_world_state.is_entity_in_world(entity)

	if object_in_world and not has_spot then
		level.map_add_object_spot(entity.id, entity.mark, game.translate_string(entity.mark))
	elseif (not object_in_world) and has_spot then
		level.map_remove_object_spot(entity.id, entity.mark)
	end
end

remove_mark = function (entity)
	if not entity.mark then return end
	level.map_remove_object_spot(entity.id, entity.mark)
end

update_marks = function (CACHE)
	for _, entity in pairs(CACHE.entities) do
		update_mark(entity)
	end
end

unmark_all = function (CACHE)
	for _, entity in pairs(CACHE.entities) do
		remove_mark(entity)
	end
end




